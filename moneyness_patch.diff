--- a/polygon_integration.py
+++ b/polygon_integration.py
@@ -1080,7 +1080,8 @@
         # Prepare standard result with metadata including ALL options (not just unusual ones)
         result_with_metadata = {
             'unusual_options': result,
-            'total_bullish_count': all_bullish_count,
+            'total_bullish_count': all_bullish_count, 
+            'current_stock_price': stock_price,
             'total_bearish_count': all_bearish_count,
             'all_options_analyzed': len(all_options)
         }
@@ -1222,6 +1223,29 @@
     except (ValueError, IndexError):
         return None
 
+def determine_moneyness(strike_price, stock_price, option_type):
+    """
+    Determine if an option is in-the-money or out-of-the-money
+    
+    Args:
+        strike_price: Option strike price (as float or string)
+        stock_price: Current stock price
+        option_type: 'call' or 'put'
+        
+    Returns:
+        String: 'in-the-money' or 'out-of-the-money'
+    """
+    try:
+        # Convert strike price to float if it's a string
+        if isinstance(strike_price, str):
+            strike_price = float(strike_price)
+            
+        # For call options: in-the-money if strike < stock price
+        if option_type.lower() == 'call':
+            return 'in-the-money' if strike_price < stock_price else 'out-of-the-money'
+        # For put options: in-the-money if strike > stock price
+        elif option_type.lower() == 'put':
+            return 'in-the-money' if strike_price > stock_price else 'out-of-the-money'
+        else:
+            return 'in-the-money'  # Default to in-the-money if we can't determine
+    except (ValueError, TypeError):
+        return 'in-the-money'  # Default to in-the-money if conversion fails
+
 def get_simplified_unusual_activity_summary(ticker):
     """
     Create a simplified, conversational summary of unusual options activity
@@ -1424,11 +1448,15 @@
                     if 'symbol' in main_contract:
                         strike_price = extract_strike_from_symbol(main_contract['symbol'])
                         if strike_price:
-                            summary += f"in-the-money ({strike_price}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                            # Determine if call option is in or out of the money
+                            stock_price = result_with_metadata.get('current_stock_price', 0)
+                            moneyness = determine_moneyness(strike_price, stock_price, 'call')
+                            summary += f"{moneyness} ({strike_price}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
                         else:
-                            summary += f"in-the-money ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                            # Try to determine moneyness from contract parts
+                            stock_price = result_with_metadata.get('current_stock_price', 0)
+                            moneyness = determine_moneyness(contract_parts[1], stock_price, 'call')
+                            summary += f"{moneyness} ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
                     else:
-                        summary += f"in-the-money ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                        summary += f"{determine_moneyness(contract_parts[1], result_with_metadata.get('current_stock_price', 0), 'call')} ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
                 else:
-                    summary += f"in-the-money ({contract_parts[1]}) options expiring soon, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                    summary += f"{determine_moneyness(contract_parts[1], result_with_metadata.get('current_stock_price', 0), 'call')} ({contract_parts[1]}) options expiring soon, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
@@ -1492,11 +1520,15 @@
                     if 'symbol' in main_contract:
                         strike_price = extract_strike_from_symbol(main_contract['symbol'])
                         if strike_price:
-                            summary += f"in-the-money ({strike_price}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                            # Determine if put option is in or out of the money
+                            stock_price = result_with_metadata.get('current_stock_price', 0)
+                            moneyness = determine_moneyness(strike_price, stock_price, 'put')
+                            summary += f"{moneyness} ({strike_price}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
                         else:
-                            summary += f"in-the-money ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                            # Try to determine moneyness from contract parts
+                            stock_price = result_with_metadata.get('current_stock_price', 0)
+                            moneyness = determine_moneyness(contract_parts[1], stock_price, 'put')
+                            summary += f"{moneyness} ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
                     else:
-                        summary += f"in-the-money ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                        summary += f"{determine_moneyness(contract_parts[1], result_with_metadata.get('current_stock_price', 0), 'put')} ({contract_parts[1]}) options expiring {expiry_date}, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
                 else:
-                    summary += f"in-the-money ({contract_parts[1]}) options expiring soon, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"
+                    summary += f"{determine_moneyness(contract_parts[1], result_with_metadata.get('current_stock_price', 0), 'put')} ({contract_parts[1]}) options expiring soon, purchased {timestamp_str if timestamp_str else '2025-04-14'}.\n\n"