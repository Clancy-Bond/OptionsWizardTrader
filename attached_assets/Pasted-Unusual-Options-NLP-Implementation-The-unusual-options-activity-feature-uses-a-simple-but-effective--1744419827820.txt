Unusual Options NLP Implementation
The unusual options activity feature uses a simple but effective NLP approach through the UnusualOptionsNLP class in unusual_options_bot.py:

class UnusualOptionsNLP:
    """Natural Language Processor for understanding unusual options activity queries"""
    
    def __init__(self):
        print("Initializing UnusualOptionsNLP")
        
        # Define patterns for extracting tickers
        self.ticker_pattern = r'(?:(?:ticker|symbol|stock|for|on|in|of|the)\s+)?(?:\$)?([A-Z]{1,5})(?!\w+\b)\b'
    
    def parse_query(self, query):
        """Parse the user query to extract ticker"""
        try:
            # Initialize result
            result = {'request_type': 'unusual_activity', 'contracts': 1}
            
            # Extract ticker symbol
            ticker_matches = re.findall(self.ticker_pattern, query)
            if ticker_matches:
                result['ticker'] = ticker_matches[0]
            
            return result
        except Exception as e:
            print(f"Error parsing query: {str(e)}")
            return {'request_type': 'unknown'}
Key Features of the NLP Implementation
Regular Expression Pattern Matching:

Uses a carefully crafted regex pattern to identify stock tickers in natural language
The pattern includes context words like "for", "on", "the" etc.
Recognizes both formats: with $ prefix ($AAPL) and without (AAPL)
Simplified Intent Recognition:

Since this is a single-purpose bot, it automatically sets request_type to "unusual_activity"
This approach streamlines the NLP since we know all queries are about unusual options activity
Message Processing Flow:

Bot checks if it's mentioned in the message
If mentioned, it extracts the text content by removing the mention tag
The NLP parser extracts the ticker symbol from the message
If a ticker is found, it passes the info to the unusual activity handler
The handler then calls get_simplified_unusual_activity_summary() to generate the response
Error Handling:

If no ticker is found, a friendly error message prompts the user to include a ticker
Provides an example of proper usage to guide the user
This streamlined NLP approach is very effective for the single-purpose unusual options activity bot, as it focuses only on extracting the most critical piece of information - the ticker symbol. The bot successfully identifies mentions and responds with detailed unusual options activity information when a valid ticker is provided.

